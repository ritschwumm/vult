let legend =
  let version = Core.Version.version in
  [%pla {|/* This code was generated by the Vult compiler <#version#s> https://github.com/modlfo/vult */|}]


let setExt ext output =
  match output with
  | None -> "output" ^ ext
  | Some file -> file ^ ext


let splitArray into elems =
  let rec loop current acc count elems =
    match elems with
    | [] -> List.rev (List.rev current :: acc)
    | h :: t when count < into -> loop (h :: current) acc (count + 1) t
    | h :: t -> loop [ h ] (List.rev current :: acc) 0 t
  in
  loop [] [] 0 elems


let cast ~(from : Code.type_) ~(to_ : Code.type_) (value : Pla.t) =
  match from, to_ with
  | Int, Real -> [%pla {|(float)<#value#>|}]
  | Int, Bool -> [%pla {|(bool)<#value#>|}]
  | Int, Fixed -> [%pla {|int_to_fix(<#value#>)|}]
  | Real, Int -> [%pla {|(int)<#value#>|}]
  | Real, Bool -> [%pla {|(<#value#> != 0.0f)|}]
  | Real, Fixed -> [%pla {|float_to_fix(<#value#>)|}]
  | Bool, Int -> [%pla {|(int)<#value#>|}]
  | Bool, Real -> [%pla {|(<#value#> ? 1.0f : 0.0f)|}]
  | Bool, Fixed -> [%pla {|(<#value#> ? int_to_fix(1) : int_to_fix(0))|}]
  (* no cast *)
  | Real, Real -> value
  | Int, Int -> value
  | Bool, Bool -> value
  | Fixed, Fixed -> value
  | _ -> failwith "Unknown cast"
